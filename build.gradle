plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.netty:netty-all:4.1.44.Final"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20220320'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation("jline:jline:2.8")
    // 1. Use Guava in your implementation only:
    implementation("com.google.guava:guava:31.1-jre")
    // https://mvnrepository.com/artifact/io.netty/netty-codec-haproxy
    implementation 'io.netty:netty-codec-haproxy:4.1.78.Final'
    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation 'org.yaml:snakeyaml:1.8'
    // https://mvnrepository.com/artifact/net.sf.trove4j/trove4j
    implementation group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'

}

configurations {
    compile {
        canBeResolved = true
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'click.recraft.server.MinecraftProxyKt'
        )
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    useJUnitPlatform()
}